<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: events.proto

namespace Endpoints\Events;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>endpoints.events.dma_list_helper</code>
 */
class dma_list_helper extends \Google\Protobuf\Internal\Message
{
    /**
     *VNP id
     *
     * Generated from protobuf field <code>int32 VNP_id = 1;</code>
     */
    protected $VNP_id = 0;
    /**
     *DMA name
     *
     * Generated from protobuf field <code>string DMA_name = 2;</code>
     */
    protected $DMA_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $VNP_id
     *          VNP id
     *     @type string $DMA_name
     *          DMA name
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Events::initOnce();
        parent::__construct($data);
    }

    /**
     *VNP id
     *
     * Generated from protobuf field <code>int32 VNP_id = 1;</code>
     * @return int
     */
    public function getVNPId()
    {
        return $this->VNP_id;
    }

    /**
     *VNP id
     *
     * Generated from protobuf field <code>int32 VNP_id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setVNPId($var)
    {
        GPBUtil::checkInt32($var);
        $this->VNP_id = $var;

        return $this;
    }

    /**
     *DMA name
     *
     * Generated from protobuf field <code>string DMA_name = 2;</code>
     * @return string
     */
    public function getDMAName()
    {
        return $this->DMA_name;
    }

    /**
     *DMA name
     *
     * Generated from protobuf field <code>string DMA_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDMAName($var)
    {
        GPBUtil::checkString($var, True);
        $this->DMA_name = $var;

        return $this;
    }

}

